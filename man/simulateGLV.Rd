% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulateGLV.R
\name{simulateGLV}
\alias{simulateGLV}
\title{simulateGLV}
\usage{
simulateGLV(N, A, b = runif(N), x = runif(N), tend = 1000, norm = FALSE)
}
\arguments{
\item{N}{Integer scalar specifying the number of species}

\item{A}{a interaction matrix}

\item{b}{Numeric scalar indicating growth rates}

\item{x}{Numeric scalar indicating initial abundances}

\item{tend}{Integer scalar indicating timepoints
(default: \code{tend = 1000})}

\item{norm}{Logical scalar \code{TRUE} or \code{FALSE},
return normalised abundances (proportions in each generation)
(default: \code{norm = FALSE})}
}
\value{
\code{simulateGLV} returns a \linkS4class{SummarizedExperiment} object
}
\description{
Simulates time series with the generalized Lotka-Volterra model and forms a
\linkS4class{SummarizedExperiment} object.
}
\details{
Simulates a community time series using the generalized Lotka-Volterra model,
defined as dx/dt = x(b+Ax), where x is the vector of species abundances,
A is the interaction matrix and growth_rates the vector of growth rates.

The resulting abundance matrix model is used to construct
\linkS4class{SummarizedExperiment} object.
}
\examples{
row_data <- data.frame(Kingdom = "A",
                    Phylum = rep(c("B1", "B2"), c(500, 500)),
                    Class = rep(c("C1", "C2"), each = 500),
                    ASV = paste0("D", seq_len(1000)),
                    row.names = rownames(paste0("species", seq_len(1000))),
                    stringsAsFactors = FALSE)
                    row_data <- t(row_data)

col_data <- data.frame(sampleID = seq_len(1000),
                    time = as.Date(sample(as.numeric(as.Date('2000-01-01')):
                                as.numeric(as.Date('2014-01-01')), 1000,
                                            replace = TRUE),
                                                    origin = '1970-01-01'),
                    row.names = colnames(paste0("sample", seq_len(1000))),
                    stringsAsFactors = FALSE)

simulateGLV(N = 4, A = powerlawA(n = 4, alpha = 2), tend = 1000)

}
